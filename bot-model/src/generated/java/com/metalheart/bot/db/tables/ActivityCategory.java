/*
 * This file is generated by jOOQ.
*/
package com.metalheart.bot.db.tables;


import com.metalheart.bot.db.Keys;
import com.metalheart.bot.db.Public;
import com.metalheart.bot.db.tables.records.ActivityCategoryRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ActivityCategory extends TableImpl<ActivityCategoryRecord> {

    private static final long serialVersionUID = 1429158253;

    /**
     * The reference instance of <code>public.activity_category</code>
     */
    public static final ActivityCategory ACTIVITY_CATEGORY = new ActivityCategory();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ActivityCategoryRecord> getRecordType() {
        return ActivityCategoryRecord.class;
    }

    /**
     * The column <code>public.activity_category.id</code>.
     */
    public final TableField<ActivityCategoryRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('activity_category_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.activity_category.name</code>.
     */
    public final TableField<ActivityCategoryRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

    /**
     * Create a <code>public.activity_category</code> table reference
     */
    public ActivityCategory() {
        this("activity_category", null);
    }

    /**
     * Create an aliased <code>public.activity_category</code> table reference
     */
    public ActivityCategory(String alias) {
        this(alias, ACTIVITY_CATEGORY);
    }

    private ActivityCategory(String alias, Table<ActivityCategoryRecord> aliased) {
        this(alias, aliased, null);
    }

    private ActivityCategory(String alias, Table<ActivityCategoryRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ActivityCategoryRecord, Integer> getIdentity() {
        return Keys.IDENTITY_ACTIVITY_CATEGORY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ActivityCategoryRecord> getPrimaryKey() {
        return Keys.ACTIVITY_CATEGORY_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ActivityCategoryRecord>> getKeys() {
        return Arrays.<UniqueKey<ActivityCategoryRecord>>asList(Keys.ACTIVITY_CATEGORY_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ActivityCategory as(String alias) {
        return new ActivityCategory(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ActivityCategory rename(String name) {
        return new ActivityCategory(name, null);
    }
}
