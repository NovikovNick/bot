/*
 * This file is generated by jOOQ.
*/
package com.metalheart.bot.db.tables;


import com.metalheart.bot.db.Keys;
import com.metalheart.bot.db.Public;
import com.metalheart.bot.db.tables.records.ActivityLogRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ActivityLog extends TableImpl<ActivityLogRecord> {

    private static final long serialVersionUID = 772269923;

    /**
     * The reference instance of <code>public.activity_log</code>
     */
    public static final ActivityLog ACTIVITY_LOG = new ActivityLog();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ActivityLogRecord> getRecordType() {
        return ActivityLogRecord.class;
    }

    /**
     * The column <code>public.activity_log.id</code>.
     */
    public final TableField<ActivityLogRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('activity_log_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.activity_log.started_at</code>.
     */
    public final TableField<ActivityLogRecord, Timestamp> STARTED_AT = createField("started_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>public.activity_log.finished_at</code>.
     */
    public final TableField<ActivityLogRecord, Timestamp> FINISHED_AT = createField("finished_at", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>public.activity_log.activity_category_id</code>.
     */
    public final TableField<ActivityLogRecord, Integer> ACTIVITY_CATEGORY_ID = createField("activity_category_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.activity_log.contact_id</code>.
     */
    public final TableField<ActivityLogRecord, Integer> CONTACT_ID = createField("contact_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>public.activity_log</code> table reference
     */
    public ActivityLog() {
        this("activity_log", null);
    }

    /**
     * Create an aliased <code>public.activity_log</code> table reference
     */
    public ActivityLog(String alias) {
        this(alias, ACTIVITY_LOG);
    }

    private ActivityLog(String alias, Table<ActivityLogRecord> aliased) {
        this(alias, aliased, null);
    }

    private ActivityLog(String alias, Table<ActivityLogRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ActivityLogRecord, Integer> getIdentity() {
        return Keys.IDENTITY_ACTIVITY_LOG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ActivityLogRecord> getPrimaryKey() {
        return Keys.ACTIVITY_LOG_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ActivityLogRecord>> getKeys() {
        return Arrays.<UniqueKey<ActivityLogRecord>>asList(Keys.ACTIVITY_LOG_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<ActivityLogRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ActivityLogRecord, ?>>asList(Keys.ACTIVITY_LOG__ACTIVITY_LOG_ACTIVITY_CATEGORY_ID_FK, Keys.ACTIVITY_LOG__ACTIVITY_LOG_CONTACT_ID_FK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ActivityLog as(String alias) {
        return new ActivityLog(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ActivityLog rename(String name) {
        return new ActivityLog(name, null);
    }
}
